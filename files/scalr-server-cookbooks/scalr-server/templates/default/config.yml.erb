scalr:
  connections:
    mysql: &connections_mysql
      host: <%= node[:scalr_server][:mysql][:host] %>
      port: <%= node[:scalr_server][:mysql][:port] %>
      user: <%= node[:scalr_server][:mysql][:scalr_user] %>
      pass: <%= node[:scalr_server][:mysql][:scalr_password] %>
      name: <%= node[:scalr_server][:mysql][:scalr_dbname] %>

  analytics:
    enabled: yes
    connections:
      analytics:
        <<: *connections_mysql
        name: <%= node[:scalr_server][:mysql][:analytics_dbname] %>
      scalr:
        <<: *connections_mysql
    poller:
      cryptokey: <%= node[:scalr][:core][:cryptokey_path] %>
      log_file: '/var/log/scalr.analytics-poller.log'
      pid_file: '/var/run/scalr.analytics-poller.pid'
    processing:
      log_file: '/var/log/scalr.analytics-processing.log'
      pid_file: '/var/run/scalr.analytics-processing.pid'

  email:
    address: <%= node[:scalr_server][:app][:email_from_address] %>
    name: <%= node[:scalr_server][:app][:email_from_name] %>

  auth_mode: scalr

  instances_connection_policy: <%= node[:scalr][:instances_connection_policy] %>

  allowed_clouds:
  - ec2
  - gce
  - eucalyptus
  - cloudstack
  - idcf
  - openstack
  - ocs
  - ecs
  - rackspacenguk
  - rackspacengus
  - nebula

  endpoint:
    scheme: <%= node[:scalr_server][:app][:endpoint_scheme] %>
    host: <%= node[:scalr_server][:app][:endpoint_host] %>

  aws:
    ip_pool: ['<%= node[:scalr_server][:app][:endpoint_ip_range] %>']
    security_group_name: scalr.<%= node[:scalr_server][:app][:id] %>.ip-pool

  billing:
    enabled: no

  dns:
    mysql:
      host: 'localhost'
      port: ~
      name: 'scalr'
      user: 'scalr'
      pass: 'scalr'
    static:
      enabled: no
      nameservers: ['ns1.example-dns.net', 'ns2.example-dns.net']
      domain_name: 'example-dns.net'
    global:
      enabled: no
      nameservers: ['ns1.example.net', 'ns2.example.net', 'ns3.example.net', 'ns4.example.net']
      default_domain_name: 'provide.domain.here.in'

  load_statistics:
    connections:
      plotter:
        scheme: 'http'
        bind_scheme: 'http' # Not used yet, but let's be safe
        host: <%= node[:scalr_server][:app][:endpoint_host] %>
        bind_host:    '0.0.0.0'  # New version
        bind_address: '0.0.0.0'  # DEPRECATED - Consider removing and use bind_host instead
        port: <%= node[:scalr][:rrd][:port] %>
        bind_port: <%= node[:scalr][:rrd][:port] %>
    rrd:
      dir: '<%= node[:scalr][:rrd][:rrd_dir] %>'
      run_dir: '<%= node[:scalr][:rrd][:run_dir] %>'
      rrdcached_sock_path: '<%= node[:scalr][:rrd][:run_dir] %>/rrdcached.sock'
    img:
      scheme: 'http'
      host: <%= node[:scalr_server][:app][:endpoint_host] %>
      path: '<%= node[:scalr][:rrd][:img_url] %>'
      dir: '<%= node[:scalr][:rrd][:img_dir] %>'

  ui:
    mindterm_enabled: true

  scalarizr_update:
    mode: 'client'
    default_repo: 'stable'
    repos:
      latest:
        deb_repo_url: 'http://apt.scalr.net/debian scalr/'
        rpm_repo_url: 'http://rpm.scalr.net/rpm/rhel/$releasever/$basearch'
        win_repo_url: 'http://win.scalr.net'
      stable:
        deb_repo_url: 'http://apt-delayed.scalr.net/debian scalr/'
        rpm_repo_url: 'http://rpm-delayed.scalr.net/rpm/rhel/$releasever/$basearch'
        win_repo_url: 'http://win-delayed.scalr.net'
